{"version":3,"file":"component---src-pages-index-tsx-b376f8cc5f788cd8c066.js","mappings":"gRA4BMA,EAAY,uBAAiBC,IAAXC,QAAwBA,QAY1CC,EAAoB,mCAAG,2FAErBC,EAZmBJ,KAAeE,OAAOG,UAUpB,iBAAAC,OAAA,SAMjBC,EAAW,IAAIC,EAAAA,EAA8BJ,GAN5BE,EAAAA,KAAAA,EAOjBC,EAASE,KAAK,sBAAuB,IAPpB,uBAQVF,EAASG,YARC,0EAUvBC,QAAQC,IAARD,EAAAA,IAVuB,0DAAH,qDAepBE,EAAI,mCAAG,WAAOC,EAAeC,EAAoBC,GAA1C,0FACJF,MAAAA,OADI,EACJA,EAAUD,KAAKG,EAAU,CAAEC,KAAMF,EAAeG,MAAO,KADnD,2CAAH,0DAmIV,UA1HkB,WACHC,EAAAA,WAAiBC,EAAAA,GAA9B,IACA,GAAgCC,EAAAA,EAAAA,UAAwB,MAAjDP,EAAP,KAAiBQ,EAAjB,KACA,GAA0CD,EAAAA,EAAAA,UAAwB,MAA3DN,EAAP,KAAsBQ,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAwB,MAClD,GADA,WACwCA,EAAAA,EAAAA,UAAiB,IACzD,GADA,WAC0BA,EAAAA,EAAAA,UAAa,KACvC,GADA,WAC8BA,EAAAA,EAAAA,UAAa,KAC3C,GADA,WAC8BA,EAAAA,EAAAA,UAAiB,KAAxCG,EAAP,KAAgBC,EAAhB,MAIAC,EAAAA,EAAAA,YAAU,WACS1B,IACb2B,SAASC,iBAAiB,aAAa,WACnC,IAAMC,EAAQF,SAASG,eAAe,WAClCD,EAAME,QACNF,MAAAA,GAAAA,EAAOG,YAGlB,IAEH,IAAMC,EAAkB,mCAAG,sGACJ9B,IADI,QACnB+B,EADmB,UAGvBA,EAAOC,aAAaC,MAAK,SAACC,GACxBd,EAAiBc,EAAQC,kBAGrBC,EAAiB,IAAI/B,EAAAA,GA3ET,6CA6EhBgC,EACAN,GAEFZ,EAAYiB,IAZW,2CAAH,qDAgBlBE,EAAa,SAAC3B,EAAUC,EAAeC,GAExCD,EACCF,EAAKC,EAAUC,EAAeC,GAC7BoB,MAAK,SAAAM,GACF/B,QAAQC,IAAI8B,GACZ,IAAMb,EAAQF,SAASG,eAAe,WACtCD,MAAAA,GAAAA,EAAOG,UAGXP,EAAW,gCAQjB,OACEN,EAAAA,cAACwB,EAAAA,EAAD,KACExB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,aACbzB,EAAAA,cAAAA,QAAAA,CAAO0B,SAAS,OAAOC,GAAG,aAAaC,UAAQ,EAACC,MAAI,EAACC,QAAM,GACzD9B,EAAAA,cAAAA,SAAAA,CAAQ+B,IAAI,+BAA+BC,KAAK,cADlD,oDAKAhC,EAAAA,cAAAA,QAAAA,CAAO2B,GAAG,UAAUD,SAAS,OAAOE,UAAQ,EAAEE,QAAM,GAClD9B,EAAAA,cAAAA,SAAAA,CAAQ+B,IAAI,sBAAsBC,KAAK,cADzC,oDAIAhC,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,SAASQ,QAAS,WAC7BnB,IAAsBR,EAAW,MAGvBV,EAAgB,YAAc,kBAG5CI,EAAAA,cAACC,EAAAA,EAAAA,SAAD,MACG,SAACiC,GACA,MAAgB,UAATA,EACLlC,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,YACbzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,QACbzB,EAAAA,cAACmC,IAAD,CAAMV,UAAU,UAIlBzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,UACXzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,WAAf,IAA4BpB,EAA5B,KACJL,EAAAA,cAACoC,IAAD,CAAMX,UAAU,iBAAiBQ,QAAS,kBAAMX,EAAW3B,EAAUC,EAAe,OAEpFI,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,UACfzB,EAAAA,cAACqC,IAAD,CAAMZ,UAAU,WAIlBzB,EAAAA,cAAAA,EAAAA,SAAAA,KAEEA,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,YACfzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,QACbzB,EAAAA,cAACmC,IAAD,CAAMV,UAAU,UAKlBzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,UACfzB,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,WAAf,IAA4BpB,EAA5B,KACAL,EAAAA,cAACoC,IAAD,CAAMX,UAAU,iBAAiBQ,QAAS,kBAAMX,EAAW3B,EAAUC,EAAe,OAGpFI,EAAAA,cAAAA,MAAAA,CAAKyB,UAAU,OACfzB,EAAAA,cAACqC,IAAD,CAAMZ,UAAU,SAEhBzB,EAAAA,cAACsC,IAAD,CAAYC,MAAM","sources":["webpack://dapp/./src/pages/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport contractABI from \"../contracts/Undead.json\";\nimport \"./mint.css\";\nimport {\n  Button,\n  Box,\n  TextInput,\n  ResponsiveContext,\n  Grid,\n  Card,\n  Stack,\n  CardBody,\n  Image,\n  CardHeader,\n  Heading,\n  Text,\n} from \"grommet\";\nconst contractAddress = \"0x23DFAe8beA1F7270e846d216e975DBDD72B11c9B\";\nimport { Undead } from \"../../gen/types/Undead\";\nimport Background from \"../assets/background.svg\";\nimport Moon from \"../assets/moon.svg\";\nimport Logo from \"../assets/undeadtownlogo.svg\";\nimport Hand from \"../assets/takemyhand.svg\";\nimport Luna from \"../assets/tombstone.svg\";\nimport Layout from \"../layouts/main\";\nimport BearKiller  from '../assets/bearkilla.svg'\n\nconst getWindow = () => window !== undefined && window;\n\nconst getWindowEth = () => getWindow() && window.ethereum;\n\nconst getWhitelistProof = (address: string, type: string) => {\n  return fetch(`/whitelist/${type}/${address}.json`)\n    .then((e) => e.json())\n    .then((e) => {\n      return e.proof;\n    });\n};\n\nconst requestConnectWallet = async () => {\n  \n  const eth = getWindowEth();\n  if (eth) {\n    try {\n\n      const provider = new ethers.providers.Web3Provider(eth);\n      await provider.send(\"eth_requestAccounts\", []);\n      return await provider.getSigner();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n};\n\nconst mint = async (contract: any, walletAddress: any, quantity) => {\n  return contract?.mint(quantity, { from: walletAddress, value: 0 })\n}\n\nconst callContract = async (contract: any, method: any, param: any) => {\n  return await contract[method](param);\n};\n\n// markup\nconst IndexPage = () => {\n  const size = React.useContext(ResponsiveContext);\n  const [contract, setContract] = useState<Undead | null>(null);\n  const [walletAddress, setWalletAddress] = useState<string | null>(null);\n  const [proof, setProof] = useState<string | null>(null);\n  const [mintQuantity, setMintQuantity] = useState<number>(1);\n  const [myNFT, setMyNFT] = useState<[]>([]);\n  const [nftMeta, setNftMeta] = useState<[]>([]);\n  const [message, setMessage] = useState<string>(\"\");\n\n\n  \n  useEffect(() => {\n        const win  = getWindow()\n        document.addEventListener('mousemove', () => {\n            const audio = document.getElementById(\"success\");\n            if(!audio.paused) {\n                audio?.play();\n            }\n        })\n  }, [])\n\n  const initializeContract = async () => {\n    const signer = await requestConnectWallet();\n    if (signer) {\n      signer.getAddress().then((address) => {\n        setWalletAddress(address.toLowerCase());\n      });\n\n      const contractObject = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        signer\n      ) as Undead;\n      setContract(contractObject);\n    }\n  };\n\n  const mintUndead = (contract, walletAddress, quantity) => {\n\n    if(walletAddress) {\n        mint(contract, walletAddress, quantity)\n        .then(success => {\n            console.log(success)\n            const audio = document.getElementById(\"success\");\n            audio?.play();\n        })\n    } else {\n        setMessage('Please connect wallet first')\n    }\n\n  }\n\n\n\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <audio autoPlay=\"true\" id=\"background\" controls loop hidden>\n          <source src=\"/assets/background_music.wav\" type=\"audio/ogg\" />\n          Your browser does not support the audio element.\n        </audio>\n\n        <audio id=\"success\" autoPlay=\"true\" controls  hidden>\n          <source src=\"/assets/success.wav\" type=\"audio/ogg\" />\n          Your browser does not support the audio element.\n        </audio>\n        <div className=\"wallet\" onClick={() => {\n            initializeContract(); setMessage(\"\")}\n        }>\n                    {\n                      walletAddress ? \"Connected\" : \"Connect wallet\"\n                    }\n        </div>\n        <ResponsiveContext.Consumer>\n          {(size) => {\n            return size === \"small\" ? (\n              <div className=\"flex-row\">\n                <div className=\"moon\">\n                  <Logo className=\"logo\"></Logo>\n\n                </div>\n\n                <div className=\"hand-c\">\n                    <div className=\"message\"> { message } </div>\n                <Hand className=\"hand buttonSVG\" onClick={() => mintUndead(contract, walletAddress, 1)}></Hand>\n                </div>\n                <div className=\"luna-c\">\n                <Luna className=\"luna\"></Luna>\n                </div>\n              </div>\n            ) : (\n              <>\n\n                <div className=\"flex-row\">\n                <div className=\"moon\">\n                  <Logo className=\"logo\"></Logo>\n\n                </div>\n\n\n                <div className=\"luna-c\">\n                <div className=\"message\"> { message } </div>\n                <Hand className=\"hand buttonSVG\" onClick={() => mintUndead(contract, walletAddress, 1)}></Hand>\n\n                </div>\n                <div className=\"o-c\">\n                <Luna className=\"luna\"></Luna>\n                \n                <BearKiller class=\"bearkilla\"></BearKiller>\n                </div>\n              </div>\n              </>\n            );\n          }}\n        </ResponsiveContext.Consumer>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["getWindow","undefined","window","requestConnectWallet","eth","ethereum","_context","provider","ethers","send","getSigner","console","log","mint","contract","walletAddress","quantity","from","value","React","ResponsiveContext","useState","setContract","setWalletAddress","message","setMessage","useEffect","document","addEventListener","audio","getElementById","paused","play","initializeContract","signer","getAddress","then","address","toLowerCase","contractObject","contractABI","mintUndead","success","Layout","className","autoPlay","id","controls","loop","hidden","src","type","onClick","size","Logo","Hand","Luna","BearKiller","class"],"sourceRoot":""}